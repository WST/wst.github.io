Python Basics
=============

Python is a high-level, interpreted programming language known for its simplicity and readability. It's widely used in web development, data science, artificial intelligence, and automation.

Getting Started
---------------

Python installation and basic setup:

.. code-block:: python

   # Check Python version
   python --version
   
   # Start Python interpreter
   python

Basic Syntax
------------

Variables and data types:

.. code-block:: python

   # Numbers
   age = 25
   height = 1.75
   
   # Strings
   name = "John Doe"
   message = 'Hello, World!'
   
   # Booleans
   is_active = True
   is_admin = False
   
   # Lists
   fruits = ["apple", "banana", "orange"]
   
   # Dictionaries
   person = {
       "name": "John",
       "age": 30,
       "city": "New York"
   }

Control Structures
------------------

Conditional statements:

.. code-block:: python

   if age >= 18:
       print("You are an adult")
   elif age >= 13:
       print("You are a teenager")
   else:
       print("You are a child")

Loops:

.. code-block:: python

   # For loop
   for fruit in fruits:
       print(fruit)
   
   # While loop
   count = 0
   while count < 5:
       print(count)
       count += 1

Functions
----------

Defining and using functions:

.. code-block:: python

   def greet(name):
       return f"Hello, {name}!"
   
   def add_numbers(a, b):
       return a + b
   
   # Function call
   message = greet("Alice")
   result = add_numbers(5, 3)

Object-Oriented Programming
---------------------------

Classes and objects:

.. code-block:: python

   class Person:
       def __init__(self, name, age):
           self.name = name
           self.age = age
       
       def introduce(self):
           return f"My name is {self.name} and I am {self.age} years old"
   
   # Creating an object
   person = Person("Bob", 25)
   print(person.introduce())

File Handling
--------------

Reading and writing files:

.. code-block:: python

   # Writing to a file
   with open("data.txt", "w") as file:
       file.write("Hello, World!")
   
   # Reading from a file
   with open("data.txt", "r") as file:
       content = file.read()
       print(content)

Error Handling
--------------

Try-except blocks:

.. code-block:: python

   try:
       result = 10 / 0
   except ZeroDivisionError:
       print("Cannot divide by zero")
   except Exception as e:
       print(f"An error occurred: {e}")
   finally:
       print("This always executes")

Best Practices
--------------

1. **Use meaningful variable names**
2. **Follow PEP 8 style guidelines**
3. **Write docstrings for functions**
4. **Use virtual environments**
5. **Handle exceptions properly**
6. **Write unit tests** 